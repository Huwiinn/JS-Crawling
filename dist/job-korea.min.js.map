{"version":3,"sources":["job-korea.js"],"names":["axios","require","cheerio","config","path","getHTML","keyword","html","regeneratorRuntime","async","_context","prev","next","awrap","get","concat","sent","data","abrupt","t0","console","log","stop","parsing","page","$","jobs","$jobList","_context2","load","each","idx","node","title","find","text","trim","exp","edu","contract","region","date","includes","push","company","getJob","_context3","h","forEach","job","emailData","from","to","subject","join","nodemailer","sendMail","err","info","crawlingJobs"],"mappings":"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","file":"job-korea.min.js","sourcesContent":["const axios = require(\"axios\");\r\nconst cheerio = require('cheerio');\r\nconst nodemailer = require(\"nodemailer\");\r\nrequire(\"dotenv\").config ({path : \"nodemailer/.env\"});\r\n\r\n\r\n\r\nconst getHTML = async (keyword) => {    \r\n    try {\r\n        const html = (await axios.get(`https://www.jobkorea.co.kr/Search/?stext=${(keyword)}&tabType=recruit&Page_No=1`)).data\r\n\r\n        return html;\r\n    } catch (err) {\r\n        console.log(\"err : \", err)\r\n    }\r\n}\r\n\r\nconst parsing = async (page) => {\r\n\r\n    const $ = cheerio.load(page);\r\n    \r\n    // 읽어들인 구인공고 목록\r\n    const jobs = [];\r\n    const $jobList = $(\".post\")\r\n    \r\n    try {\r\n\r\n    $jobList.each((idx, node) => {\r\n        const title = $(node).find(\".title:eq(0)\").text().trim();\r\n        const company = $(node).find(\".name:eq(0)\").text().trim();\r\n        const exp = $(node).find(\".exp:eq(0)\").text().trim();\r\n        const edu = $(node).find(\".edu:eq(0)\").text().trim();\r\n        const contract = $(node).find(\"span:eq(2)\").text().trim();\r\n        const region = $(node).find(\".loc.long:eq(0)\").text().trim();\r\n        const date = $(node).find(\".date:eq(0)\").text().trim();\r\n\r\n\r\n        if (exp.includes(\"신입\") || exp.includes(\"경력무관\") ) {\r\n             jobs.push({\r\n            title, company, exp, edu, contract, region, date\r\n        }) \r\n        }\r\n\r\n       \r\n    })\r\n        return jobs\r\n        \r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n    \r\n}\r\n\r\nconst getJob = async (keyword) => {\r\n    const html = await getHTML(keyword);\r\n    const jobs = await parsing(html)\r\n    console.log(jobs)\r\n    return jobs;\r\n}\r\n\r\nconst crawlingJobs = async (keyword) => {\r\n    const jobs = await getJob(\"프론트엔드\")\r\n    \r\n    const h = [];\r\n    \r\n    h.push(`<table style=\"border:1px solid #000; border-collapse:collapse\">`)\r\n    h.push(`<thead>`)\r\n    h.push(`<tr>`)\r\n    h.push(`<th>구인제목</th>`)\r\n    h.push(`<th>회사명</th>`)\r\n    h.push(`<th>경력</th>`)\r\n    h.push(`<th>학력</th>`)\r\n    h.push(`<th>정규직 여부</th>`)\r\n    h.push(`<th>지역</th>`)\r\n    h.push(`<th>구인 마감일</th>`)\r\n    h.push(`</tr>`)\r\n    h.push(`</thead>`)\r\n    h.push(`<tbody>`)\r\n    jobs.forEach(job => {\r\n        h.push(`<tr>`)\r\n        h.push(`<td>${job.title}</td>`)\r\n        h.push(`<td>${job.company}</td>`)\r\n        h.push(`<td>${job.exp}</td>`)\r\n        h.push(`<td>${job.edu}</td>`)\r\n        h.push(`<td>${job.contract}</td>`)\r\n        h.push(`<td>${job.region}</td>`)\r\n        h.push(`<td>${job.date}</td>`)\r\n        h.push(`</tr>`)\r\n    })\r\n    h.push(`</tbody>`)\r\n    h.push(`</table>`)\r\n\r\n    const emailData = {\r\n        from: \"gnldls8406@naver.com\",\r\n        to: \"gnldls8406@gmail.com\",\r\n        subject: \"프론트엔드 구인 회사 정보\",\r\n        html : h.join(\"\")\r\n    }\r\n\r\n    await nodemailer.sendMail(emailData, (err, info) => {\r\n        console.log(err)\r\n    });\r\n}\r\n\r\ncrawlingJobs(\"프론트엔드\");\r\n"]}