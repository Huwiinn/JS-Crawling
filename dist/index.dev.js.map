{"version":3,"sources":["index.js"],"names":["axios","require","cheerio","getHTML","keyword","get","encodeURI","html","data","console","log","parsing","page","$","load","courses","$coursesList","each","idx","node","title","find","text","instructor","price","ogPrice","length","rating","Math","round","parseFloat","css","slice","reviewCount","imgSrc","attr","push","getCourse","getFullCourse","i","course","concat"],"mappings":"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","sourcesContent":["// axios - 특정 웹사이트 페이지 내용 가져오기\r\n// cheerio - HTML 구조를 가지고 있는 일반 텍스트들\r\n\r\nconst axios = require(\"axios\");\r\nconst cheerio = require('cheerio');\r\n\r\n\r\n\r\n// 페이지의 내용을 긁어와서 해당 변수에 자료를 저장함.\r\nconst getHTML = async (keyword) => {\r\ntry {\r\n    const html = (await axios.get(`https://www.inflearn.com/courses?s=${encodeURI(keyword)}`)).data;\r\n    return html;\r\n} catch(err) {\r\n    console.log(\"err : \", err)\r\n}\r\n}\r\n\r\nconst parsing = async (page) => {\r\n    const $ = cheerio.load(page);\r\n    // 읽어들인 강의 목록\r\n    const courses = [];\r\n\r\n    const $coursesList = $(\".course_card_item\");\r\n\r\n    // console.log(1111111, $coursesList.length)\r\n\r\n    $coursesList.each((idx, node) => {\r\n        // :eq는 제이쿼리 선택자 문법임\r\n        const title = $(node).find(\".course_title:eq(0)\").text();\r\n        const instructor = $(node).find(\".instructor:eq(0)\").text();\r\n        let price = 0;\r\n        let ogPrice = 0;\r\n        if ( $(node).find(\".pay_price\").length > 0 ) {\r\n            price = $(node).find(\".pay_price:eq(0)\").text();\r\n            ogPrice = $(node).find(\"del:eq(0)\").text();\r\n        } else {\r\n            price = $(node).find(\".price:eq(0)\").text();\r\n        }\r\n\r\n        const rating = Math.round(parseFloat( $(node).find(\".star_solid\").css(\"width\").slice(0, -1)));\r\n        const reviewCount = $(node).find(\".review_cnt\").text().slice(1, -1);\r\n        const imgSrc = $(node).find(\".card-image > figure > img\").attr('src');\r\n\r\n        courses.push({title, instructor, price, ogPrice, imgSrc, rating})\r\n    })\r\n\r\n    return courses\r\n}\r\n\r\nconst getCourse = async (keyword) => {\r\n    const html = await getHTML(keyword);\r\n\r\n    // 긁어온 내용을 넣음\r\n    const courses = await parsing(html);\r\n    console.log(courses);\r\n    return courses\r\n}\r\n\r\nconst getFullCourse = async () => {\r\nlet courses = [];\r\nlet i = 1;\r\n    while (1 <= 20) {\r\n    const course = await getCourse(`자바스크립트&order=search&page=${i}`)\r\n    courses = courses.concat(course);\r\n    i++;\r\n} \r\n\r\nconsole.log(11111, courses)\r\nconsole.log(22222, courses.length)\r\n}\r\n\r\ngetFullCourse();\r\n\r\n"],"file":"index.dev.js"}