{"version":3,"sources":["index.js"],"names":["axios","require","getHTML","html","regeneratorRuntime","async","_context","prev","next","awrap","get","concat","encodeURI","keyword","sent","data","abrupt","t0","console","log","stop","parsing","page","$","courses","_context2","cheerio","load","each","idx","node","title","find","text","instructor","price","ogPrice","length","rating","Math","round","parseFloat","css","slice","attr","imgSrc","$coursesList","getCourse","getFullCourse","i","course","_context4","push"],"mappings":"aACA,IAAAA,MAAAC,QAAA,SAEMD,QAAQC,QAAQ,WAMhBC,QAAU,SAAVA,GAAU,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAK,MAAAT,MAAAU,IAAA,sCAAAC,OAAAC,UAAAC,MAAA,KAAA,EAAA,OAAAV,EAAAG,EAAAQ,KAAAC,KAAAT,EAAAU,OAAA,SAAAb,GAAA,KAAA,EAAAG,EAAAC,KAAA,EAAAD,EAAAW,GAAAX,EAAA,MAAA,GAAAY,QAAAC,IAAA,SAAAb,EAAAW,IAAA,KAAA,GAAA,IAAA,MAAA,OAAAX,EAAAc,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MASVC,QAAU,SAAOC,GAAP,IAAAC,EAAAC,EAAA,OAAApB,mBAAAC,MAAA,SAAAoB,GAAA,OAAA,OAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,KAAA,EAAA,OATAe,EAAAG,QAAAC,KAAAL,GAAAE,EAAA,GAAAD,EAAA,qBAkBCK,KAAK,SAACC,EAAKC,GAlBZ,IAAAC,EAAAR,EAAAO,GAAAE,KAAA,uBAAAC,OAAAC,EAAAX,EAAAO,GAAAE,KAAA,qBAAAC,OAAAE,EAAA,EAAAC,EAAA,EAAA,EAAAb,EAAAO,GAAAE,KAAA,cAAAK,QAAhBF,EAAAZ,EAAAO,GAAAE,KAAA,oBAAAC,OA0BYG,EAAUb,EAAEO,GAAME,KAAK,aAAaC,QAjBhCE,EAAAZ,EAAAO,GAAAE,KAAA,gBAAAC,OAAA,IAAAK,EAAAC,KAAAC,MAAAC,WAAAlB,EAAAO,GAAAE,KAAA,eAAAU,IAAA,SAAAC,MAAA,GAAA,KACFjB,GADEH,EAAAO,GAAAE,KAAA,eAAAC,OAAAU,MAAA,GAAA,GACMhB,EAAAA,GAARK,KACV,8BAAAY,KAAA,QACMpB,EAAAA,KAAU,CAHJO,MAAAA,EAAAG,WAAAA,EAAAC,MAAAA,EAAAC,QAAAA,EAAAS,OAAAA,EAAAP,OAAAA,MAAAb,EAAAT,OAAA,SASZ8B,GATY,KAAA,EAAA,IAAA,MAAA,OAAArB,EAAAL,WAYR2B,UAAMb,SAAAA,GAAAA,IAAAA,EAAAA,EAAAA,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAAA,OAAAA,EAAAA,KAAAA,EAAAA,mBAAAA,MACGhC,QAATW,IADMqB,KAAAA,EAAAA,OACN/B,EADM+B,EAAAA,KAAAA,EAAAA,KAAAA,EAAAA,mBAAAA,MAGOF,QAAK7B,IAHZ+B,KAAAA,EAAAA,OAGNV,EAHMU,EAAAA,KAIFC,QAAAA,IAAAA,GAJED,EAAAA,OAAAA,SAKFE,GALEF,KAAAA,EAAAA,IAAAA,MAAAA,OAAAA,EAAAA,WAQLc,cAAA,WAAA,IAAAxB,EAAAyB,EAAAC,EAAA,OAAA9C,mBAAAC,MAAA,SAAA8C,GAAA,OAAA,OAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,KAAA,EAsBLgB,EAAU,GApBNyB,EAAA,EAFC,KAAA,EAAA,OAAAE,EAAA3C,KAAA,EAAAJ,mBAAAK,MAIcc,UAAQS,4BAAAA,OAAKiB,KAJ3B,KAAA,EAIDC,EAJCC,EAAArC,KAMDU,EAAAA,EAAQ4B,OAAKF,GAACnB,IANboB,EAAA3C,KAAA,EAAA,MAAA,KAAA,GAMuC4B,QAAAA,IAAAA,MAAAA,GAASS,QAAAA,IAAAA,MAAAA,EAAAA,QANhD,KAAA,GAAA,IAAA,MAAA,OAAAM,EAAA/B,WAOJ4B","file":"index.min.js","sourcesContent":["// axios - 특정 웹사이트 페이지 내용 가져오기\r\n// cheerio - HTML 구조를 가지고 있는 일반 텍스트들\r\n\r\nconst axios = require(\"axios\");\r\nconst cheerio = require('cheerio');\r\n\r\n\r\n\r\n// 페이지의 내용을 긁어와서 해당 변수에 자료를 저장함.\r\nconst getHTML = async (keyword) => {\r\ntry {\r\n    const html = (await axios.get(`https://www.inflearn.com/courses?s=${encodeURI(keyword)}`)).data;\r\n    return html;\r\n} catch(err) {\r\n    console.log(\"err : \", err)\r\n}\r\n}\r\n\r\nconst parsing = async (page) => {\r\n    const $ = cheerio.load(page);\r\n    // 읽어들인 강의 목록\r\n    const courses = [];\r\n\r\n    const $coursesList = $(\".course_card_item\");\r\n\r\n    // console.log(1111111, $coursesList.length)\r\n\r\n    $coursesList.each((idx, node) => {\r\n        // :eq는 제이쿼리 선택자 문법임\r\n        const title = $(node).find(\".course_title:eq(0)\").text();\r\n        const instructor = $(node).find(\".instructor:eq(0)\").text();\r\n        let price = 0;\r\n        let ogPrice = 0;\r\n        if ( $(node).find(\".pay_price\").length > 0 ) {\r\n            price = $(node).find(\".pay_price:eq(0)\").text();\r\n            ogPrice = $(node).find(\"del:eq(0)\").text();\r\n        } else {\r\n            price = $(node).find(\".price:eq(0)\").text();\r\n        }\r\n\r\n        const rating = Math.round(parseFloat( $(node).find(\".star_solid\").css(\"width\").slice(0, -1)));\r\n        const reviewCount = $(node).find(\".review_cnt\").text().slice(1, -1);\r\n        const imgSrc = $(node).find(\".card-image > figure > img\").attr('src');\r\n\r\n        courses.push({title, instructor, price, ogPrice, imgSrc, rating})\r\n    })\r\n\r\n    return courses\r\n}\r\n\r\nconst getCourse = async (keyword) => {\r\n    const html = await getHTML(keyword);\r\n\r\n    // 긁어온 내용을 넣음\r\n    const courses = await parsing(html);\r\n    console.log(courses);\r\n    return courses\r\n}\r\n\r\nconst getFullCourse = async () => {\r\nlet courses = [];\r\nlet i = 1;\r\n    while (1 <= 20) {\r\n    const course = await getCourse(`자바스크립트&order=search&page=${i}`)\r\n    courses = courses.concat(course);\r\n    i++;\r\n} \r\n\r\nconsole.log(11111, courses)\r\nconsole.log(22222, courses.length)\r\n}\r\n\r\ngetFullCourse();\r\n\r\n"]}